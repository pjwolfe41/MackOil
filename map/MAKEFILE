# compiler = TurboC
# compiler = BorlandC
# compiler = WatcomC

# TurboC makefile macros (?)
.IF $(compiler) == TurboC
INCLUDE = C:/TC/INCLUDE
ARFLAGS = -r
AR = ar $(ARFLAGS)
CFLAGS = -A -N -mh -I. -I../h
CC = tcc -c $(CFLAGS)
LDFLAGS = $(CFLAGS)
LD = tcc $(LDFLAGS)
LINTOPT = -iC:/lint co-tc.lnt -iC:/lint -i../h -i$(INCLUDE) options.lnt
.END

# Borland C makefile macros (?)
.IF $(compiler) == BorlandC
INCLUDE = E:/BC4/INCLUDE
ARFLAGS = -r
AR = ar $(ARFLAGS)
CFLAGS = -A -mh -I. -I../h
CC = bcc -c $(CFLAGS)
LDFLAGS = $(CFLAGS)
LD = bcc $(LDFLAGS)
LINTOPT = -iC:/lint co-bc.lnt -iC:/lint -i../h -i$(INCLUDE) options.lnt
.END

# makefile for WATCOM macros
.IF $(compiler) == WatcomC
INCLUDE = C:/WATCOM/H
ARFLAGS = -r
AR = ar $(ARFLAGS)
CFLAGS = /fpi87 /sg /i="c:\watcom\h"
CC = wcc386 $(CFLAGS)
LDFLAGS = $(CFLAGS) /k8192 /l=dos4g
LD = wcl386 $(LDFLAGS)
LINTOPT = -iC:/lint co-wc.lnt -iC:/lint -i../h -i$(INCLUDE) options.lnt
.END

%.obj : %.c
	$(CC) $^

header = ../h/outopt.h ../h/prepdata.h ../h/readdata.h ../h/utility.h
subs = stub.c
object = stub.obj
libs = ..\\\outopt\\\outopt.lib ..\\\prepdata\\\prepdata.lib ..\\\readdata\\\readdata.lib ..\\\utility\\\utility.lib

diff : result0 result
	- diff -h -b result0 result > diff
	if test -s diff ; then vi diff ; else print NO CHANGE ; fi

result .PRECIOUS : map.exe testdata.dat testdata.fit output.opt
	map testdata code > result
	map testdata obs >> result
	map testdata fit 9 >> result
	map testdata resid 3 >> result

map.exe : map.obj map.lib $(libs)
	cp ../utility/utility.lib .
	cp ../readdata/readdata.lib .
	cp ../prepdata/prepdata.lib .
	cp ../outopt/outopt.lib .
	$(LD) map.obj map.lib *.lib

$(object) : $(header)
map.lib : $(object)
	$(AR) map.lib $(object)

lint  : map.c $(subs) $(header) 
	- lint $(LINTOPT) -e771 map.c $(subs) > lint

clean :
	rm -f *.obj *.lib *.exe *.err
